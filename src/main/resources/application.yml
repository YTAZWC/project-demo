server:
  port: 7979
logging:
  level:
    top.ytazwc: debug
spring:
  shardingsphere:
    datasource:
      names: db0    # 数据源名称 多数据源以,分隔
      db0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/project_demo?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
        username: root
        password: 123456
    # 分片规则配置
    rules:
      sharding:
        # 分片算法配置
        sharding-algorithms:
          table-inline:
            # 分片算法类型
            type: INLINE
            props:
              # 分片算法行表达式
              algorithm-expression: t_orders_$->{order_id%2+1}
        tables:
          # 逻辑表名称
          t_orders:
            # 行表达式建议使用 $->{} 避免与Spring 本身的属性文件占位符冲突
            actual-data-nodes: db0.t_orders_$->{1..2}
            # 分表策略
            table-strategy:
              standard:
                # 分表列名称
                sharding-column: order_id
                # 分片算法名称
                sharding-algorithm-name: table-inline
    props:
      # 展示修改以后的SQL语句
      sql-show: true

#  datasource:
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://localhost:3306/project_demo?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
#    username: root
#    password: 123456
mybatis-plus:
  type-aliases-package: top.ytazwc.entity

